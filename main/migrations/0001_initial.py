# Generated by Django 4.0.4 on 2022-06-20 10:18

import ckeditor.fields
import colorful.fields
import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import main.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Заголовок')),
                ('text', ckeditor.fields.RichTextField(verbose_name='Текст')),
            ],
            options={
                'verbose_name': 'О нас',
                'verbose_name_plural': 'О нас',
            },
        ),
        migrations.CreateModel(
            name='BackCall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=155, verbose_name='Имя')),
                ('number_of_phone', models.CharField(max_length=14, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')], verbose_name='Номер телефона')),
                ('type', models.CharField(default='Обратный звонок', max_length=255, verbose_name='Тип обращения')),
                ('date_of_call', models.DateTimeField(default=datetime.datetime.now, verbose_name='добавить время')),
                ('status', models.CharField(choices=[('yes', 'Да'), ('no', 'Нет')], default='no', max_length=155)),
            ],
            options={
                'verbose_name': 'Обратный звонок',
                'verbose_name_plural': 'Обратный звонок',
            },
        ),
        migrations.CreateModel(
            name='Benefit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.ImageField(upload_to='benefit', validators=[main.models.png_or_svg])),
                ('title', models.CharField(max_length=150)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'Наши преимущества',
                'verbose_name_plural': 'Наши преимущества',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='', verbose_name='Фото')),
                ('title', models.CharField(max_length=55, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Коллекция',
                'verbose_name_plural': 'Коллекция',
            },
        ),
        migrations.CreateModel(
            name='Footer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(upload_to='footer_header', validators=[main.models.png_or_svg], verbose_name='Логотип')),
                ('imformation', models.TextField(verbose_name='Информация')),
                ('number', models.CharField(max_length=15, verbose_name='Номер')),
            ],
            options={
                'verbose_name': 'Футер(первая вкладка)',
                'verbose_name_plural': 'Футер(первая вкладка)',
            },
        ),
        migrations.CreateModel(
            name='Help',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(verbose_name='Вопрос')),
                ('answer', models.TextField(verbose_name='Ответ')),
            ],
            options={
                'verbose_name': 'Помощь',
                'verbose_name_plural': 'Помощь',
            },
        ),
        migrations.CreateModel(
            name='ImageHelp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='help_image')),
            ],
            options={
                'verbose_name': 'Фотография для помощи',
                'verbose_name_plural': 'Фотография для помощи',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='news')),
                ('title', models.CharField(max_length=150)),
                ('description', ckeditor.fields.RichTextField()),
            ],
            options={
                'verbose_name': 'Новости',
                'verbose_name_plural': 'Новости',
            },
        ),
        migrations.CreateModel(
            name='Number',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=14, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')], verbose_name='Номер телефона')),
            ],
        ),
        migrations.CreateModel(
            name='Oferro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Заголовок')),
                ('description', ckeditor.fields.RichTextField(verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Публичная оферта',
                'verbose_name_plural': 'Публичная оферта',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('article', models.CharField(max_length=150, verbose_name='Артикль')),
                ('old_price', models.CharField(max_length=150, verbose_name='Старая цена')),
                ('discount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, verbose_name='Скидка')),
                ('new_price', models.IntegerField(blank=True, default=0, null=True, verbose_name='Новая цена')),
                ('description', ckeditor.fields.RichTextField(verbose_name='Описание')),
                ('size', models.CharField(default='42-50', max_length=55, verbose_name='Размер')),
                ('line_of_size', models.CharField(blank=True, max_length=55, null=True, verbose_name='Линейка')),
                ('compound', models.CharField(max_length=155, verbose_name='Состав')),
                ('amount', models.PositiveIntegerField(default=1, verbose_name='Кол-во')),
                ('material', models.CharField(max_length=150, verbose_name='Материал')),
                ('new', models.BooleanField(blank=True, default=False, null=True, verbose_name='Новинка')),
                ('hit', models.BooleanField(blank=True, default=False, null=True, verbose_name='Хит продаж')),
                ('favorite', models.BooleanField(blank=True, default=False, null=True, verbose_name='Избранные')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product', to='main.collection', verbose_name='Коллекция')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товар',
            },
        ),
        migrations.CreateModel(
            name='Slider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='slider_image', verbose_name='Фото')),
                ('field_link', models.CharField(blank=True, max_length=150, verbose_name='Ссылка')),
            ],
            options={
                'verbose_name': 'Слайдер',
                'verbose_name_plural': 'Слайдер',
            },
        ),
        migrations.CreateModel(
            name='SecondFooter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('messen', models.CharField(choices=[('number', 'Номер'), ('email', 'Почта'), ('instagram', 'Instagram'), ('telegram', 'Телеграм'), ('whatsapp', 'WhatsApp')], max_length=155, verbose_name='Соцсеть')),
                ('link', models.CharField(blank=True, max_length=16, null=True)),
                ('footer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.footer')),
            ],
            options={
                'verbose_name': 'Футер(вторая вкладка)',
                'verbose_name_plural': 'Футер(вторая вкладка)',
            },
        ),
        migrations.CreateModel(
            name='ProductImageColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='product', verbose_name='Фото')),
                ('color', colorful.fields.RGBColorField()),
                ('products', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='main.product', verbose_name='Товары')),
            ],
        ),
        migrations.CreateModel(
            name='AboutUsImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='about')),
                ('about_us', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='main.aboutus')),
            ],
        ),
    ]
